{"version":3,"sources":["components/Header/Header.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["Header","className","Component","SearchBox","state","searchLine","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","preventDefault","getData","a","fetch","encodeURIComponent","res","json","data","Response","console","log","props","changeStateSearchArr","Search","alert","this","onSubmit","type","placeholder","onChange","disabled","onClick","MovieItem","Title","Year","Poster","imdbID","src","alt","addFilmToList","class","Movies","movies","searchArr","length","map","movie","key","textButton","Favorites","title","listNameFromInput","linkFromServer","getIdSearchFilm","arrFromFavoriteList","idFilm","getListFilms","method","headers","body","JSON","stringify","id","changeInputName","event","setTimeout","blockSaveButton","item","deleteFilm","to","MainPage","find","film","myChoice","cloneArrFromFavoriteList","push","filter","ListPage","moviesID","backHome","window","open","idParams","match","params","getNewList","then","selectedMovie","NewList","Promise","all","filmList","href","Plot","App","path","exact","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.939ccd4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() { \r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"header__title\">\r\n                    MustSee\r\n                </h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport './SearchBox.css';\r\n\r\nclass SearchBox extends Component {\r\n    state = {\r\n        searchLine: ''\r\n    }\r\n    searchLineChangeHandler = (e) => {\r\n        this.setState({ searchLine: e.target.value });\r\n    }\r\n    searchBoxSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    getData = async () => {\r\n        const res = await fetch(`https://www.omdbapi.com/?s=${encodeURIComponent(this.state.searchLine)}&apikey=dbf0b196`);\r\n        const data = await res.json();\r\n        if(data.Response === \"True\" ){\r\n            console.log(data);\r\n            return this.props.changeStateSearchArr(data.Search)\r\n        } else {\r\n            alert(\"Movie not found\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        const { searchLine } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-box\">\r\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\r\n                    <label className=\"search-box__form-label\">\r\n                        Искать фильм по названию:\r\n                        <input\r\n                            value={searchLine}\r\n                            type=\"text\"\r\n                            className=\"search-box__form-input\"\r\n                            placeholder=\"Например, Shawshank Redemption\"\r\n                            onChange={this.searchLineChangeHandler}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-box__form-submit\"\r\n                        disabled={!searchLine}\r\n                        onClick={this.getData}\r\n                    >\r\n                        Искать\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport './MovieItem.css';\r\n\r\nclass MovieItem extends Component {\r\n\r\n    render() {\r\n        const { Title,Year, Poster,imdbID } = this.props;\r\n        return (\r\n            <article className=\"movie-item\">\r\n                <img className=\"movie-item__poster\" src={Poster} alt={Title} />\r\n                <div className=\"movie-item__info\">\r\n                    <h3 className=\"movie-item__title\">{Title}&nbsp;({Year})</h3>\r\n                    <button disabled={this.props.disabled} onClick={()=> {this.props.addFilmToList(imdbID)}} type=\"button\"  className={`movie-item__add-button ${this.props.class}`}> Добавить в список</button>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MovieItem;","import React, { Component } from 'react';\r\nimport MovieItem from '../MovieItem/MovieItem';\r\nimport './Movies.css';\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [\r\n            // {\r\n            //     imdbID: 'tt3896198',\r\n            //     Title: \"Guardians of the Galaxy Vol. 2\",\r\n            //     Year: 2017,\r\n            //     Poster: \"https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg\"\r\n\r\n            // },\r\n            // {\r\n            //     imdbID: 'tt0068646',\r\n            //     Title: \"The Godfather\",\r\n            //     Year: 1972,\r\n            //     Poster: \"https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\r\n\r\n            // }\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this.props.searchArr.length);\r\n        return (\r\n            <ul className=\"movies\">\r\n                { \r\n                (this.props.searchArr.length > 0) &&\r\n                   this.props.searchArr.map((movie) => (\r\n                        <li className=\"movies__item\" key={movie.imdbID}>\r\n                            <MovieItem {...movie} disabled ={false} addFilmToList={this.props.addFilmToList} textButton={this.props.textButton} />\r\n                        </li>\r\n                    ))\r\n                }\r\n                {  !(this.props.searchArr.length > 0 ) &&\r\n                    this.state.movies.map((movie) => (\r\n                        <li className=\"movies__item\" key={movie.imdbID}>\r\n                            <MovieItem {...movie} disabled ={true} class={\"movies__item_button-red\"}/>\r\n                        </li>\r\n                    ))}\r\n\r\n\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;","import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Favorites extends Component {\r\n    state = {\r\n        title: 'Новый список',\r\n        movies: [\r\n            { imdbID: 'tt0068646', Title: 'The Godfather', Year: 1972 }\r\n        ],\r\n        listNameFromInput: '',\r\n        disabled: false,\r\n        linkFromServer: ''\r\n    }\r\n\r\n    getIdSearchFilm = () => {\r\n        const { arrFromFavoriteList } = this.props;\r\n        const idFilm = arrFromFavoriteList.map((idFilm) => { return idFilm.imdbID });\r\n        // console.log(idFilm);\r\n        return idFilm\r\n    };\r\n\r\n\r\n    linkFromServer = (data) => {\r\n        this.setState({ linkFromServer: data })\r\n    }\r\n\r\n\r\n    getListFilms = async () => {\r\n        const res = await\r\n            fetch('https://acb-api.algoritmika.org/api/movies/list ', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        \"title\": this.state.listNameFromInput,\r\n                        \"movies\": this.getIdSearchFilm()\r\n                    }\r\n                ),\r\n            })\r\n        const data = await res.json();\r\n        this.linkFromServer(data.id);\r\n\r\n    }\r\n\r\n    changeInputName = (event) => {\r\n        setTimeout(this.setState({ listNameFromInput: event.target.value }),\r\n            1500);\r\n    }\r\n\r\n    blockSaveButton = () => {\r\n        this.setState({ disabled: !this.state.disabled })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"favorites\">\r\n                <input onChange={this.changeInputName} value={this.state.listNameFromInput} disabled={this.state.disabled} placeholder=\"Новый список\" className=\"favorites__name\" />\r\n                <ul className=\"favorites__list\">\r\n                    {this.props.arrFromFavoriteList.map((item) => {\r\n                        return <div className=\"favorites__selected-movie\">\r\n                            <li key={item.imdbID}>{item.Title} ({item.Year}) </li>\r\n                            <button className={this.state.disabled ? \"favorites__delete-buton-disabled\" : \"favorites__delete-buton\"} disabled={this.state.disabled} onClick={() => { this.props.deleteFilm(item.imdbID) }}>Удалить</button>\r\n                        </div>;\r\n                    })}\r\n                </ul>\r\n                {this.state.disabled ?\r\n                    <Link className=\"favorites__save\" to={`/list/${this.state.linkFromServer}`}>Перейти к списку</Link>\r\n                    :\r\n                    <button onClick={() => { this.getListFilms(); this.blockSaveButton() }} type=\"button\" className=\"favorites__save\">Сохранить список</button>\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport Movies from '../../components/Movies/Movies';\r\nimport Favorites from '../../components/Favorites/Favorites';\r\n\r\nclass MainPage extends Component {\r\n    state = {\r\n        searchArr: [],\r\n        arrFromFavoriteList: [],\r\n        textButton: 'Добавить в список'\r\n    }\r\n\r\n    changeStateSearchArr = (data) => {\r\n        this.setState({ searchArr: data });\r\n\r\n    }\r\n    addFilmToList = (id) => {\r\n        const isContainsInFavorites = this.state.arrFromFavoriteList.find((film) => { return film.imdbID === id });\r\n        if (isContainsInFavorites) {\r\n            return null\r\n        }\r\n        const myChoice = this.state.searchArr.find((film) => { return film.imdbID === id });\r\n        const cloneArrFromFavoriteList = [...this.state.arrFromFavoriteList];\r\n\r\n        cloneArrFromFavoriteList.push(myChoice);\r\n        this.setState({ arrFromFavoriteList: cloneArrFromFavoriteList })\r\n    }\r\n    deleteFilm = (id) => {\r\n        const deleteFilm = this.state.arrFromFavoriteList.filter((film) => { return film.imdbID !== id });\r\n        this.setState({ arrFromFavoriteList: deleteFilm })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-page\">\r\n                <Header />\r\n                <main className=\"main-page__content\">\r\n                    <section className=\"main-page__main-section\">\r\n                        <div className=\"main-page__search-box\">\r\n                            <SearchBox changeStateSearchArr={this.changeStateSearchArr} />\r\n                        </div>\r\n                        <div className=\"main-page__movies\">\r\n                            <Movies addFilmToList={this.addFilmToList} searchArr={this.state.searchArr} textButton={this.state.textButton} />\r\n                        </div>\r\n                    </section>\r\n                    <aside className=\"main-page__favorites\">\r\n                        <Favorites arrFromFavoriteList={this.state.arrFromFavoriteList} deleteFilm={this.deleteFilm} />\r\n                    </aside>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport './ListPage.css';\r\n\r\nclass ListPage extends Component {\r\n    state = {\r\n        movies: [\r\n            { Title: 'The Godfather', Year: 1972, imdbID: 'tt0068646' }\r\n        ],\r\n        title: '',\r\n        moviesID: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idParams = this.props.match.params;\r\n        console.log(idParams);\r\n\r\n\r\n        let getNewList = async () => {\r\n            const res = await fetch(`https://acb-api.algoritmika.org/api/movies/list/${idParams.id}`);\r\n            const data = await res.json();\r\n            this.setState({ title: data.title, moviesID: data.movies });\r\n            return data;\r\n        }\r\n    \r\n\r\n        const selectedMoviesList = getNewList()\r\n            .then((data) => {\r\n                // console.log(data);\r\n                let selectedMovie = data.movies.map((idFilm) => {\r\n                    // console.log(idFilm);\r\n                    let NewList = async () => {\r\n                        // console.log(idFilm);\r\n                        const res = await fetch(`https://www.omdbapi.com/?i=${idFilm}&apikey=dbf0b196`);\r\n                        // console.log(res);\r\n                        const data = await res.json();\r\n                        // console.log(data);\r\n                        return data;\r\n                    }\r\n                    return NewList(idFilm);\r\n                })\r\n                Promise.all(selectedMovie).then((filmList) => {\r\n                    this.setState({ movies: filmList })\r\n                })\r\n            });\r\n    }\r\n\r\n    backHome = () => {\r\n\r\n        window.open(\"/\")\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"list-page\">\r\n                <h1 className=\"list-page__title\">{this.state.title}</h1>\r\n                <ul>\r\n                    {this.state.movies.map((item) => {\r\n                        return (\r\n                            <>\r\n                                <div className=\"list-page__newList\">\r\n                                    <a className=\"list-page__newList\" href={`https://www.imdb.com/title/${item.imdbID}/`} target=\"_blank\">\r\n                                        <img className=\"list-page__img-for-newList\" src={item.Poster} alt={item.Title}></img>\r\n                                        <li className=\"list-page__img-for-newList_title\" key={item.imdbID}>{item.Title} ({item.Year})</li>\r\n                                    </a>\r\n                                    <div>Description :<br />{item.Plot}</div>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    })}\r\n                    <button type=\"button\" onClick={this.backHome}>Назад </button>\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport ListPage from './pages/ListPage/ListPage';\r\n\r\nimport './reset.css';\r\nimport './common.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/\" exact component={MainPage} />\r\n        <Route path=\"/list/:id\" exact component={ListPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}